# Work in progress...

A note on mock versions: 

  There are now two main branches to be aware of:
    - mock-1.0 (pre-F13 and EPEL5)
    - mock-1.3 (EPEL6)
    - master (for releasing and development, F-13+ and EPEL7+)
  Please be careful when
  updating the various distro to use the correct branch and version
  number when generating tarfiles for RPM generation.

=====================================================================

Release checklist overview:

0) change to the local master
   $ git checkout master
1) fetch git remotes and fast-forward your local master
   $ git pull --rebase master
2) install snapshot version
   $ tito build --rpm -i
3) run 'make check' in ./integration-tests directory and fix any reported
   failures until it passes, you need to configure the box by ./setup-box.sh
   first (don't run this on your box ideally, but temporarily allocated VM):
   $ ./integration-tests/prepare/setup-box.sh
   $ make check 1>/tmp/test-output.txt  2>&1
4) tag the git tree:
   $ tito tag
   When you release both mock and mock-core-configs together, you
   likely want to (a) first tag 'mock-core-configs' package with bumped
   'Requires: mock >= ??', (b) bump 'Conflicts: mock-core-configs < ??' in
   mock.spec and (c) then tag new mock version.
5) push to main git repo (only from master branch):
   $ git push
   $ git push --tags
6) release for EPEL and Fedora
   $ git checkout master
   # make sure that .tito/releasers.conf is up to date
   $ tito release fedora-git-all
   $ tito release epel-git-all
   $ tito release @copr # this can be usually skipped as it is done automatically by Copr
7) publish tgz
   $ tito build --tgz
   Go to:
   https://github.com/rpm-software-management/mock/releases
   Click Draft new release
   Choose existing tag. E.g., mock-1.4.9-1 @ master
   Enter the same tag as release title.
   Attach the binary.
8) Prepare release notes. And add list of contributed authors:
   git log mock-1.4.8-1.. --format="%aN" | sort |uniq

Once the builds finish (successfully) you should push the just built
packages to their respective testing repositories. This can be done
either with the Bodhi WebUI at
https://bodhi.fedoraproject.org/ or if there are no other
package dependencies, using the 'fedpkg update' command. 
Note that you do not need to do this for the master (rawhide) branch
since it automatically gets pushed to testing.  




